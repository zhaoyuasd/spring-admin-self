{"version":3,"sources":["webpack:///assets/js/event-source-polyfill.js","webpack:///./node_modules/event-source-polyfill/src/eventsource.js"],"names":["webpackJsonp","./node_modules/event-source-polyfill/src/eventsource.js","module","exports","global","XHRWrapper","xhr","this","withCredentials","responseType","readyState","status","statusText","responseText","onprogress","k","onreadystatechange","_contentType","_xhr","_sendTimeout","_abort","XHRTransport","EventTarget","_listeners","Object","create","throwError","e","setTimeout","Event","type","target","undefined","MessageEvent","options","call","data","lastEventId","EventSourcePolyfill","url","onopen","onmessage","onerror","_close","start","es","String","Boolean","initialRetry","clampDuration","heartbeatTimeout","parseDuration","retry","wasActivity","headers","JSON","parse","stringify","CurrentTransport","Transport","XDomainRequest","XMLHttpRequest","transport","timeout","currentState","WAITING","dataBuffer","lastEventIdBuffer","eventTypeBuffer","textBuffer","state","FIELD_START","fieldStart","valueStart","onStart","contentType","CONNECTING","contentTypeRegExp","test","OPEN","event","dispatchEvent","fire","message","replace","Error","close","onProgress","textChunk","n","i","length","c","charCodeAt","chunk","slice","position","AFTER_CR","FIELD","field","value","clearTimeout","onTimeout","CLOSED","VALUE_START","VALUE","onFinish","Math","min","cancel","requestURL","indexOf","encodeURIComponent","requestHeaders","name","prototype","hasOwnProperty","open","error","NativeEventSource","EventSource","document","C","F","method","that","silent","onload","onabort","abort","getResponseHeader","onReadyStateChange","setRequestHeader","send","error1","onStartCallback","onProgressCallback","onFinishCallback","offset","typeListeners","listener","handleEvent","addEventListener","listeners","found","push","removeEventListener","filtered","def","parseInt","max","f","window"],"mappings":"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","file":"assets/js/event-source-polyfill.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"./node_modules/event-source-polyfill/src/eventsource.js\":\n/***/ (function(module, exports) {\n\n/** @license\r\n * eventsource.js\r\n * Available under MIT License (MIT)\r\n * https://github.com/Yaffle/EventSource/\r\n */\r\n\r\n/*jslint indent: 2, vars: true, plusplus: true */\r\n/*global setTimeout, clearTimeout */\r\n\r\n(function (global) {\r\n  \"use strict\";\r\n\r\n  var setTimeout = global.setTimeout;\r\n  var clearTimeout = global.clearTimeout;\r\n  var XMLHttpRequest = global.XMLHttpRequest;\r\n  var XDomainRequest = global.XDomainRequest;\r\n  var NativeEventSource = global.EventSource;\r\n  var document = global.document;\r\n\r\n  if (Object.create == null) {\r\n    Object.create = function (C) {\r\n      function F(){}\r\n      F.prototype = C;\r\n      return new F();\r\n    };\r\n  }\r\n\r\n  var k = function () {\r\n  };\r\n\r\n  function XHRWrapper(xhr) {\r\n    this.withCredentials = false;\r\n    this.responseType = \"\";\r\n    this.readyState = 0;\r\n    this.status = 0;\r\n    this.statusText = \"\";\r\n    this.responseText = \"\";\r\n    this.onprogress = k;\r\n    this.onreadystatechange = k;\r\n    this._contentType = \"\";\r\n    this._xhr = xhr;\r\n    this._sendTimeout = 0;\r\n    this._abort = k;\r\n  }\r\n\r\n  XHRWrapper.prototype.open = function (method, url) {\r\n    this._abort(true);\r\n\r\n    var that = this;\r\n    var xhr = this._xhr;\r\n    var state = 1;\r\n    var timeout = 0;\r\n\r\n    this._abort = function (silent) {\r\n      if (that._sendTimeout !== 0) {\r\n        clearTimeout(that._sendTimeout);\r\n        that._sendTimeout = 0;\r\n      }\r\n      if (state === 1 || state === 2 || state === 3) {\r\n        state = 4;\r\n        xhr.onload = k;\r\n        xhr.onerror = k;\r\n        xhr.onabort = k;\r\n        xhr.onprogress = k;\r\n        xhr.onreadystatechange = k;\r\n        // IE 8 - 9: XDomainRequest#abort() does not fire any event\r\n        // Opera < 10: XMLHttpRequest#abort() does not fire any event\r\n        xhr.abort();\r\n        if (timeout !== 0) {\r\n          clearTimeout(timeout);\r\n          timeout = 0;\r\n        }\r\n        if (!silent) {\r\n          that.readyState = 4;\r\n          that.onreadystatechange();\r\n        }\r\n      }\r\n      state = 0;\r\n    };\r\n\r\n    var onStart = function () {\r\n      if (state === 1) {\r\n        //state = 2;\r\n        var status = 0;\r\n        var statusText = \"\";\r\n        var contentType = undefined;\r\n        if (!(\"contentType\" in xhr)) {\r\n          try {\r\n            status = xhr.status;\r\n            statusText = xhr.statusText;\r\n            contentType = xhr.getResponseHeader(\"Content-Type\");\r\n          } catch (error) {\r\n            // IE < 10 throws exception for `xhr.status` when xhr.readyState === 2 || xhr.readyState === 3\r\n            // Opera < 11 throws exception for `xhr.status` when xhr.readyState === 2\r\n            // https://bugs.webkit.org/show_bug.cgi?id=29121\r\n            status = 0;\r\n            statusText = \"\";\r\n            contentType = undefined;\r\n            // Firefox < 14, Chrome ?, Safari ?\r\n            // https://bugs.webkit.org/show_bug.cgi?id=29658\r\n            // https://bugs.webkit.org/show_bug.cgi?id=77854\r\n          }\r\n        } else {\r\n          status = 200;\r\n          statusText = \"OK\";\r\n          contentType = xhr.contentType;\r\n        }\r\n        if (status !== 0) {\r\n          state = 2;\r\n          that.readyState = 2;\r\n          that.status = status;\r\n          that.statusText = statusText;\r\n          that._contentType = contentType;\r\n          that.onreadystatechange();\r\n        }\r\n      }\r\n    };\r\n    var onProgress = function () {\r\n      onStart();\r\n      if (state === 2 || state === 3) {\r\n        state = 3;\r\n        var responseText = \"\";\r\n        try {\r\n          responseText = xhr.responseText;\r\n        } catch (error) {\r\n          // IE 8 - 9 with XMLHttpRequest\r\n        }\r\n        that.readyState = 3;\r\n        that.responseText = responseText;\r\n        that.onprogress();\r\n      }\r\n    };\r\n    var onFinish = function () {\r\n      // Firefox 52 fires \"readystatechange\" (xhr.readyState === 4) without final \"readystatechange\" (xhr.readyState === 3)\r\n      // IE 8 fires \"onload\" without \"onprogress\"\r\n      onProgress();\r\n      if (state === 1 || state === 2 || state === 3) {\r\n        state = 4;\r\n        if (timeout !== 0) {\r\n          clearTimeout(timeout);\r\n          timeout = 0;\r\n        }\r\n        that.readyState = 4;\r\n        that.onreadystatechange();\r\n      }\r\n    };\r\n    var onReadyStateChange = function () {\r\n      if (xhr != undefined) { // Opera 12\r\n        if (xhr.readyState === 4) {\r\n          onFinish();\r\n        } else if (xhr.readyState === 3) {\r\n          onProgress();\r\n        } else if (xhr.readyState === 2) {\r\n          onStart();\r\n        }\r\n      }\r\n    };\r\n    var onTimeout = function () {\r\n      timeout = setTimeout(function () {\r\n        onTimeout();\r\n      }, 500);\r\n      if (xhr.readyState === 3) {\r\n        onProgress();\r\n      }\r\n    };\r\n\r\n    // XDomainRequest#abort removes onprogress, onerror, onload\r\n    xhr.onload = onFinish;\r\n    xhr.onerror = onFinish;\r\n    // improper fix to match Firefox behaviour, but it is better than just ignore abort\r\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=768596\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=880200\r\n    // https://code.google.com/p/chromium/issues/detail?id=153570\r\n    // IE 8 fires \"onload\" without \"onprogress\r\n    xhr.onabort = onFinish;\r\n\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=736723    \r\n    if (!(\"sendAsBinary\" in XMLHttpRequest.prototype) && !(\"mozAnon\" in XMLHttpRequest.prototype)) {\r\n      xhr.onprogress = onProgress;\r\n    }\r\n\r\n    // IE 8 - 9 (XMLHTTPRequest)\r\n    // Opera < 12\r\n    // Firefox < 3.5\r\n    // Firefox 3.5 - 3.6 - ? < 9.0\r\n    // onprogress is not fired sometimes or delayed\r\n    // see also #64\r\n    xhr.onreadystatechange = onReadyStateChange;\r\n\r\n    if (\"contentType\" in xhr) {\r\n      url += (url.indexOf(\"?\", 0) === -1 ? \"?\" : \"&\") + \"padding=true\";\r\n    }\r\n    xhr.open(method, url, true);\r\n\r\n    if (\"readyState\" in xhr) {\r\n      // workaround for Opera 12 issue with \"progress\" events\r\n      // #91\r\n      timeout = setTimeout(function () {\r\n        onTimeout();\r\n      }, 0);\r\n    }\r\n  };\r\n  XHRWrapper.prototype.abort = function () {\r\n    this._abort(false);\r\n  };\r\n  XHRWrapper.prototype.getResponseHeader = function (name) {\r\n    return this._contentType;\r\n  };\r\n  XHRWrapper.prototype.setRequestHeader = function (name, value) {\r\n    var xhr = this._xhr;\r\n    if (\"setRequestHeader\" in xhr) {\r\n      xhr.setRequestHeader(name, value);\r\n    }\r\n  };\r\n  XHRWrapper.prototype.send = function () {\r\n    // loading indicator in Safari < ? (6), Chrome < 14, Firefox\r\n    if (!(\"ontimeout\" in XMLHttpRequest.prototype) &&\r\n        document != undefined &&\r\n        document.readyState != undefined &&\r\n        document.readyState !== \"complete\") {\r\n      var that = this;\r\n      that._sendTimeout = setTimeout(function () {\r\n        that._sendTimeout = 0;\r\n        that.send();\r\n      }, 4);\r\n      return;\r\n    }\r\n\r\n    var xhr = this._xhr;\r\n    // withCredentials should be set after \"open\" for Safari and Chrome (< 19 ?)\r\n    xhr.withCredentials = this.withCredentials;\r\n    xhr.responseType = this.responseType;\r\n    try {\r\n      // xhr.send(); throws \"Not enough arguments\" in Firefox 3.0\r\n      xhr.send(undefined);\r\n    } catch (error1) {\r\n      // Safari 5.1.7, Opera 12\r\n      throw error1;\r\n    }\r\n  };\r\n\r\n  function XHRTransport(xhr) {\r\n    this._xhr = new XHRWrapper(xhr);\r\n  }\r\n\r\n  XHRTransport.prototype.open = function (onStartCallback, onProgressCallback, onFinishCallback, url, withCredentials, headers) {\r\n    var xhr = this._xhr;\r\n    xhr.open(\"GET\", url);\r\n    var offset = 0;\r\n    xhr.onprogress = function () {\r\n      var responseText = xhr.responseText;\r\n      var chunk = responseText.slice(offset);\r\n      offset += chunk.length;\r\n      onProgressCallback(chunk);\r\n    };\r\n    xhr.onreadystatechange = function () {\r\n      if (xhr.readyState === 2) {\r\n        var status = xhr.status;\r\n        var statusText = xhr.statusText;\r\n        var contentType = xhr.getResponseHeader(\"Content-Type\");\r\n        onStartCallback(status, statusText, contentType);\r\n      } else if (xhr.readyState === 4) {\r\n        onFinishCallback();\r\n      }\r\n    };\r\n    xhr.withCredentials = withCredentials;\r\n    xhr.responseType = \"text\";\r\n    for (var name in headers) {\r\n      if (Object.prototype.hasOwnProperty.call(headers, name)) {\r\n        xhr.setRequestHeader(name, headers[name]);\r\n      }\r\n    }\r\n    xhr.send();\r\n  };\r\n\r\n  XHRTransport.prototype.cancel = function () {\r\n    var xhr = this._xhr;\r\n    xhr.abort();\r\n  };\r\n\r\n  function EventTarget() {\r\n    this._listeners = Object.create(null);\r\n  }\r\n\r\n  function throwError(e) {\r\n    setTimeout(function () {\r\n      throw e;\r\n    }, 0);\r\n  }\r\n\r\n  EventTarget.prototype.dispatchEvent = function (event) {\r\n    event.target = this;\r\n    var typeListeners = this._listeners[event.type];\r\n    if (typeListeners != undefined) {\r\n      var length = typeListeners.length;\r\n      for (var i = 0; i < length; i += 1) {\r\n        var listener = typeListeners[i];\r\n        try {\r\n          if (typeof listener.handleEvent === \"function\") {\r\n            listener.handleEvent(event);\r\n          } else {\r\n            listener.call(this, event);\r\n          }\r\n        } catch (e) {\r\n          throwError(e);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  EventTarget.prototype.addEventListener = function (type, listener) {\r\n    type = String(type);\r\n    var listeners = this._listeners;\r\n    var typeListeners = listeners[type];\r\n    if (typeListeners == undefined) {\r\n      typeListeners = [];\r\n      listeners[type] = typeListeners;\r\n    }\r\n    var found = false;\r\n    for (var i = 0; i < typeListeners.length; i += 1) {\r\n      if (typeListeners[i] === listener) {\r\n        found = true;\r\n      }\r\n    }\r\n    if (!found) {\r\n      typeListeners.push(listener);\r\n    }\r\n  };\r\n  EventTarget.prototype.removeEventListener = function (type, listener) {\r\n    type = String(type);\r\n    var listeners = this._listeners;\r\n    var typeListeners = listeners[type];\r\n    if (typeListeners != undefined) {\r\n      var filtered = [];\r\n      for (var i = 0; i < typeListeners.length; i += 1) {\r\n        if (typeListeners[i] !== listener) {\r\n          filtered.push(typeListeners[i]);\r\n        }\r\n      }\r\n      if (filtered.length === 0) {\r\n        delete listeners[type];\r\n      } else {\r\n        listeners[type] = filtered;\r\n      }\r\n    }\r\n  };\r\n\r\n  function Event(type) {\r\n    this.type = type;\r\n    this.target = undefined;\r\n  }\r\n\r\n  function MessageEvent(type, options) {\r\n    Event.call(this, type);\r\n    this.data = options.data;\r\n    this.lastEventId = options.lastEventId;\r\n  }\r\n\r\n  MessageEvent.prototype = Object.create(Event.prototype);\r\n\r\n  var WAITING = -1;\r\n  var CONNECTING = 0;\r\n  var OPEN = 1;\r\n  var CLOSED = 2;\r\n\r\n  var AFTER_CR = -1;\r\n  var FIELD_START = 0;\r\n  var FIELD = 1;\r\n  var VALUE_START = 2;\r\n  var VALUE = 3;\r\n\r\n  var contentTypeRegExp = /^text\\/event\\-stream;?(\\s*charset\\=utf\\-8)?$/i;\r\n\r\n  var MINIMUM_DURATION = 1000;\r\n  var MAXIMUM_DURATION = 18000000;\r\n\r\n  var parseDuration = function (value, def) {\r\n    var n = parseInt(value, 10);\r\n    if (n !== n) {\r\n      n = def;\r\n    }\r\n    return clampDuration(n);\r\n  };\r\n  var clampDuration = function (n) {\r\n    return Math.min(Math.max(n, MINIMUM_DURATION), MAXIMUM_DURATION);\r\n  };\r\n\r\n  var fire = function (that, f, event) {\r\n    try {\r\n      if (typeof f === \"function\") {\r\n        f.call(that, event);\r\n      }\r\n    } catch (e) {\r\n      throwError(e);\r\n    }\r\n  };\r\n\r\n  function EventSourcePolyfill(url, options) {\r\n    EventTarget.call(this);\r\n\r\n    this.onopen = undefined;\r\n    this.onmessage = undefined;\r\n    this.onerror = undefined;\r\n\r\n    this.url = undefined;\r\n    this.readyState = undefined;\r\n    this.withCredentials = undefined;\r\n\r\n    this._close = undefined;\r\n\r\n    start(this, url, options);\r\n  }\r\n\r\n  function start(es, url, options) {\r\n    url = String(url);\r\n    var withCredentials = options != undefined && Boolean(options.withCredentials);\r\n\r\n    var initialRetry = clampDuration(1000);\r\n    var heartbeatTimeout = options != undefined && options.heartbeatTimeout != undefined ? parseDuration(options.heartbeatTimeout, 45000) : clampDuration(45000);\r\n\r\n    var lastEventId = \"\";\r\n    var retry = initialRetry;\r\n    var wasActivity = false;\r\n    var headers = options != undefined && options.headers != undefined ? JSON.parse(JSON.stringify(options.headers)) : undefined;\r\n    var CurrentTransport = options != undefined && options.Transport != undefined ? options.Transport : (XDomainRequest != undefined ? XDomainRequest : XMLHttpRequest);\r\n    var transport = new XHRTransport(new CurrentTransport());\r\n    var timeout = 0;\r\n    var currentState = WAITING;\r\n    var dataBuffer = \"\";\r\n    var lastEventIdBuffer = \"\";\r\n    var eventTypeBuffer = \"\";\r\n\r\n    var textBuffer = \"\";\r\n    var state = FIELD_START;\r\n    var fieldStart = 0;\r\n    var valueStart = 0;\r\n\r\n    var onStart = function (status, statusText, contentType) {\r\n      if (currentState === CONNECTING) {\r\n        if (status === 200 && contentType != undefined && contentTypeRegExp.test(contentType)) {\r\n          currentState = OPEN;\r\n          wasActivity = true;\r\n          retry = initialRetry;\r\n          es.readyState = OPEN;\r\n          var event = new Event(\"open\");\r\n          es.dispatchEvent(event);\r\n          fire(es, es.onopen, event);\r\n        } else {\r\n          var message = \"\";\r\n          if (status !== 200) {\r\n            if (statusText) {\r\n              statusText = statusText.replace(/\\s+/g, \" \");\r\n            }\r\n            message = \"EventSource's response has a status \" + status + \" \" + statusText + \" that is not 200. Aborting the connection.\";\r\n          } else {\r\n            message = \"EventSource's response has a Content-Type specifying an unsupported type: \" + (contentType == undefined ? \"-\" : contentType.replace(/\\s+/g, \" \")) + \". Aborting the connection.\";\r\n          }\r\n          throwError(new Error(message));\r\n          close();\r\n          var event = new Event(\"error\");\r\n          es.dispatchEvent(event);\r\n          fire(es, es.onerror, event);\r\n        }\r\n      }\r\n    };\r\n\r\n    var onProgress = function (textChunk) {\r\n      if (currentState === OPEN) {\r\n        var n = -1;\r\n        for (var i = 0; i < textChunk.length; i += 1) {\r\n          var c = textChunk.charCodeAt(i);\r\n          if (c === \"\\n\".charCodeAt(0) || c === \"\\r\".charCodeAt(0)) {\r\n            n = i;\r\n          }\r\n        }\r\n        var chunk = (n !== -1 ? textBuffer : \"\") + textChunk.slice(0, n + 1);\r\n        textBuffer = (n === -1 ? textBuffer : \"\") + textChunk.slice(n + 1);\r\n        if (chunk !== \"\") {\r\n          wasActivity = true;\r\n        }\r\n        for (var position = 0; position < chunk.length; position += 1) {\r\n          var c = chunk.charCodeAt(position);\r\n          if (state === AFTER_CR && c === \"\\n\".charCodeAt(0)) {\r\n            state = FIELD_START;\r\n          } else {\r\n            if (state === AFTER_CR) {\r\n              state = FIELD_START;\r\n            }\r\n            if (c === \"\\r\".charCodeAt(0) || c === \"\\n\".charCodeAt(0)) {\r\n              if (state !== FIELD_START) {\r\n                if (state === FIELD) {\r\n                  valueStart = position + 1;\r\n                }\r\n                var field = chunk.slice(fieldStart, valueStart - 1);\r\n                var value = chunk.slice(valueStart + (valueStart < position && chunk.charCodeAt(valueStart) === \" \".charCodeAt(0) ? 1 : 0), position);\r\n                if (field === \"data\") {\r\n                  dataBuffer += \"\\n\";\r\n                  dataBuffer += value;\r\n                } else if (field === \"id\") {\r\n                  lastEventIdBuffer = value;\r\n                } else if (field === \"event\") {\r\n                  eventTypeBuffer = value;\r\n                } else if (field === \"retry\") {\r\n                  initialRetry = parseDuration(value, initialRetry);\r\n                  retry = initialRetry;\r\n                } else if (field === \"heartbeatTimeout\") {\r\n                  heartbeatTimeout = parseDuration(value, heartbeatTimeout);\r\n                  if (timeout !== 0) {\r\n                    clearTimeout(timeout);\r\n                    timeout = setTimeout(function () {\r\n                      onTimeout();\r\n                    }, heartbeatTimeout);\r\n                  }\r\n                }\r\n              }\r\n              if (state === FIELD_START) {\r\n                if (dataBuffer !== \"\") {\r\n                  lastEventId = lastEventIdBuffer;\r\n                  if (eventTypeBuffer === \"\") {\r\n                    eventTypeBuffer = \"message\";\r\n                  }\r\n                  var event = new MessageEvent(eventTypeBuffer, {\r\n                    data: dataBuffer.slice(1),\r\n                    lastEventId: lastEventIdBuffer\r\n                  });\r\n                  es.dispatchEvent(event);\r\n                  if (eventTypeBuffer === \"message\") {\r\n                    fire(es, es.onmessage, event);\r\n                  }\r\n                  if (currentState === CLOSED) {\r\n                    return;\r\n                  }\r\n                }\r\n                dataBuffer = \"\";\r\n                eventTypeBuffer = \"\";\r\n              }\r\n              state = c === \"\\r\".charCodeAt(0) ? AFTER_CR : FIELD_START;\r\n            } else {\r\n              if (state === FIELD_START) {\r\n                fieldStart = position;\r\n                state = FIELD;\r\n              }\r\n              if (state === FIELD) {\r\n                if (c === \":\".charCodeAt(0)) {\r\n                  valueStart = position + 1;\r\n                  state = VALUE_START;\r\n                }\r\n              } else if (state === VALUE_START) {\r\n                state = VALUE;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    var onFinish = function () {\r\n      if (currentState === OPEN || currentState === CONNECTING) {\r\n        currentState = WAITING;\r\n        if (timeout !== 0) {\r\n          clearTimeout(timeout);\r\n          timeout = 0;\r\n        }\r\n        timeout = setTimeout(function () {\r\n          onTimeout();\r\n        }, retry);\r\n        retry = clampDuration(Math.min(initialRetry * 16, retry * 2));\r\n\r\n        es.readyState = CONNECTING;\r\n        var event = new Event(\"error\");\r\n        es.dispatchEvent(event);\r\n        fire(es, es.onerror, event);\r\n      }\r\n    };\r\n\r\n    var close = function () {\r\n      currentState = CLOSED;\r\n      transport.cancel();\r\n      if (timeout !== 0) {\r\n        clearTimeout(timeout);\r\n        timeout = 0;\r\n      }\r\n      es.readyState = CLOSED;\r\n    };\r\n\r\n    var onTimeout = function () {\r\n      timeout = 0;\r\n\r\n      if (currentState !== WAITING) {\r\n        if (!wasActivity) {\r\n          throwError(new Error(\"No activity within \" + heartbeatTimeout + \" milliseconds. Reconnecting.\"));\r\n          transport.cancel();\r\n        } else {\r\n          wasActivity = false;\r\n          timeout = setTimeout(function () {\r\n            onTimeout();\r\n          }, heartbeatTimeout);\r\n        }\r\n        return;\r\n      }\r\n\r\n      wasActivity = false;\r\n      timeout = setTimeout(function () {\r\n        onTimeout();\r\n      }, heartbeatTimeout);\r\n\r\n      currentState = CONNECTING;\r\n      dataBuffer = \"\";\r\n      eventTypeBuffer = \"\";\r\n      lastEventIdBuffer = lastEventId;\r\n      textBuffer = \"\";\r\n      fieldStart = 0;\r\n      valueStart = 0;\r\n      state = FIELD_START;\r\n\r\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=428916\r\n      // Request header field Last-Event-ID is not allowed by Access-Control-Allow-Headers.\r\n      var requestURL = url;\r\n      if (url.slice(0, 5) !== \"data:\" &&\r\n          url.slice(0, 5) !== \"blob:\") {\r\n        requestURL = url + (url.indexOf(\"?\", 0) === -1 ? \"?\" : \"&\") + \"lastEventId=\" + encodeURIComponent(lastEventId);\r\n      }\r\n      var requestHeaders = {};\r\n      requestHeaders[\"Accept\"] = \"text/event-stream\";\r\n      if (headers != undefined) {\r\n        for (var name in headers) {\r\n          if (Object.prototype.hasOwnProperty.call(headers, name)) {\r\n            requestHeaders[name] = headers[name];\r\n          }\r\n        }\r\n      }\r\n      try {\r\n        transport.open(onStart, onProgress, onFinish, requestURL, withCredentials, requestHeaders);\r\n      } catch (error) {\r\n        close();\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    es.url = url;\r\n    es.readyState = CONNECTING;\r\n    es.withCredentials = withCredentials;\r\n    es._close = close;\r\n\r\n    onTimeout();\r\n  }\r\n\r\n  EventSourcePolyfill.prototype = Object.create(EventTarget.prototype);\r\n  EventSourcePolyfill.prototype.CONNECTING = CONNECTING;\r\n  EventSourcePolyfill.prototype.OPEN = OPEN;\r\n  EventSourcePolyfill.prototype.CLOSED = CLOSED;\r\n  EventSourcePolyfill.prototype.close = function () {\r\n    this._close();\r\n  };\r\n\r\n  EventSourcePolyfill.CONNECTING = CONNECTING;\r\n  EventSourcePolyfill.OPEN = OPEN;\r\n  EventSourcePolyfill.CLOSED = CLOSED;\r\n  EventSourcePolyfill.prototype.withCredentials = undefined;\r\n\r\n  global.EventSourcePolyfill = EventSourcePolyfill;\r\n  global.NativeEventSource = NativeEventSource;\r\n\r\n  if (XMLHttpRequest != undefined && (NativeEventSource == undefined || !(\"withCredentials\" in NativeEventSource.prototype))) {\r\n    // Why replace a native EventSource ?\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=444328\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=831392\r\n    // https://code.google.com/p/chromium/issues/detail?id=260144\r\n    // https://code.google.com/p/chromium/issues/detail?id=225654\r\n    // ...\r\n    global.EventSource = EventSourcePolyfill;\r\n  }\r\n\r\n}(typeof window !== 'undefined' ? window : this));\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// assets/js/event-source-polyfill.js","/** @license\r\n * eventsource.js\r\n * Available under MIT License (MIT)\r\n * https://github.com/Yaffle/EventSource/\r\n */\r\n\r\n/*jslint indent: 2, vars: true, plusplus: true */\r\n/*global setTimeout, clearTimeout */\r\n\r\n(function (global) {\r\n  \"use strict\";\r\n\r\n  var setTimeout = global.setTimeout;\r\n  var clearTimeout = global.clearTimeout;\r\n  var XMLHttpRequest = global.XMLHttpRequest;\r\n  var XDomainRequest = global.XDomainRequest;\r\n  var NativeEventSource = global.EventSource;\r\n  var document = global.document;\r\n\r\n  if (Object.create == null) {\r\n    Object.create = function (C) {\r\n      function F(){}\r\n      F.prototype = C;\r\n      return new F();\r\n    };\r\n  }\r\n\r\n  var k = function () {\r\n  };\r\n\r\n  function XHRWrapper(xhr) {\r\n    this.withCredentials = false;\r\n    this.responseType = \"\";\r\n    this.readyState = 0;\r\n    this.status = 0;\r\n    this.statusText = \"\";\r\n    this.responseText = \"\";\r\n    this.onprogress = k;\r\n    this.onreadystatechange = k;\r\n    this._contentType = \"\";\r\n    this._xhr = xhr;\r\n    this._sendTimeout = 0;\r\n    this._abort = k;\r\n  }\r\n\r\n  XHRWrapper.prototype.open = function (method, url) {\r\n    this._abort(true);\r\n\r\n    var that = this;\r\n    var xhr = this._xhr;\r\n    var state = 1;\r\n    var timeout = 0;\r\n\r\n    this._abort = function (silent) {\r\n      if (that._sendTimeout !== 0) {\r\n        clearTimeout(that._sendTimeout);\r\n        that._sendTimeout = 0;\r\n      }\r\n      if (state === 1 || state === 2 || state === 3) {\r\n        state = 4;\r\n        xhr.onload = k;\r\n        xhr.onerror = k;\r\n        xhr.onabort = k;\r\n        xhr.onprogress = k;\r\n        xhr.onreadystatechange = k;\r\n        // IE 8 - 9: XDomainRequest#abort() does not fire any event\r\n        // Opera < 10: XMLHttpRequest#abort() does not fire any event\r\n        xhr.abort();\r\n        if (timeout !== 0) {\r\n          clearTimeout(timeout);\r\n          timeout = 0;\r\n        }\r\n        if (!silent) {\r\n          that.readyState = 4;\r\n          that.onreadystatechange();\r\n        }\r\n      }\r\n      state = 0;\r\n    };\r\n\r\n    var onStart = function () {\r\n      if (state === 1) {\r\n        //state = 2;\r\n        var status = 0;\r\n        var statusText = \"\";\r\n        var contentType = undefined;\r\n        if (!(\"contentType\" in xhr)) {\r\n          try {\r\n            status = xhr.status;\r\n            statusText = xhr.statusText;\r\n            contentType = xhr.getResponseHeader(\"Content-Type\");\r\n          } catch (error) {\r\n            // IE < 10 throws exception for `xhr.status` when xhr.readyState === 2 || xhr.readyState === 3\r\n            // Opera < 11 throws exception for `xhr.status` when xhr.readyState === 2\r\n            // https://bugs.webkit.org/show_bug.cgi?id=29121\r\n            status = 0;\r\n            statusText = \"\";\r\n            contentType = undefined;\r\n            // Firefox < 14, Chrome ?, Safari ?\r\n            // https://bugs.webkit.org/show_bug.cgi?id=29658\r\n            // https://bugs.webkit.org/show_bug.cgi?id=77854\r\n          }\r\n        } else {\r\n          status = 200;\r\n          statusText = \"OK\";\r\n          contentType = xhr.contentType;\r\n        }\r\n        if (status !== 0) {\r\n          state = 2;\r\n          that.readyState = 2;\r\n          that.status = status;\r\n          that.statusText = statusText;\r\n          that._contentType = contentType;\r\n          that.onreadystatechange();\r\n        }\r\n      }\r\n    };\r\n    var onProgress = function () {\r\n      onStart();\r\n      if (state === 2 || state === 3) {\r\n        state = 3;\r\n        var responseText = \"\";\r\n        try {\r\n          responseText = xhr.responseText;\r\n        } catch (error) {\r\n          // IE 8 - 9 with XMLHttpRequest\r\n        }\r\n        that.readyState = 3;\r\n        that.responseText = responseText;\r\n        that.onprogress();\r\n      }\r\n    };\r\n    var onFinish = function () {\r\n      // Firefox 52 fires \"readystatechange\" (xhr.readyState === 4) without final \"readystatechange\" (xhr.readyState === 3)\r\n      // IE 8 fires \"onload\" without \"onprogress\"\r\n      onProgress();\r\n      if (state === 1 || state === 2 || state === 3) {\r\n        state = 4;\r\n        if (timeout !== 0) {\r\n          clearTimeout(timeout);\r\n          timeout = 0;\r\n        }\r\n        that.readyState = 4;\r\n        that.onreadystatechange();\r\n      }\r\n    };\r\n    var onReadyStateChange = function () {\r\n      if (xhr != undefined) { // Opera 12\r\n        if (xhr.readyState === 4) {\r\n          onFinish();\r\n        } else if (xhr.readyState === 3) {\r\n          onProgress();\r\n        } else if (xhr.readyState === 2) {\r\n          onStart();\r\n        }\r\n      }\r\n    };\r\n    var onTimeout = function () {\r\n      timeout = setTimeout(function () {\r\n        onTimeout();\r\n      }, 500);\r\n      if (xhr.readyState === 3) {\r\n        onProgress();\r\n      }\r\n    };\r\n\r\n    // XDomainRequest#abort removes onprogress, onerror, onload\r\n    xhr.onload = onFinish;\r\n    xhr.onerror = onFinish;\r\n    // improper fix to match Firefox behaviour, but it is better than just ignore abort\r\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=768596\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=880200\r\n    // https://code.google.com/p/chromium/issues/detail?id=153570\r\n    // IE 8 fires \"onload\" without \"onprogress\r\n    xhr.onabort = onFinish;\r\n\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=736723    \r\n    if (!(\"sendAsBinary\" in XMLHttpRequest.prototype) && !(\"mozAnon\" in XMLHttpRequest.prototype)) {\r\n      xhr.onprogress = onProgress;\r\n    }\r\n\r\n    // IE 8 - 9 (XMLHTTPRequest)\r\n    // Opera < 12\r\n    // Firefox < 3.5\r\n    // Firefox 3.5 - 3.6 - ? < 9.0\r\n    // onprogress is not fired sometimes or delayed\r\n    // see also #64\r\n    xhr.onreadystatechange = onReadyStateChange;\r\n\r\n    if (\"contentType\" in xhr) {\r\n      url += (url.indexOf(\"?\", 0) === -1 ? \"?\" : \"&\") + \"padding=true\";\r\n    }\r\n    xhr.open(method, url, true);\r\n\r\n    if (\"readyState\" in xhr) {\r\n      // workaround for Opera 12 issue with \"progress\" events\r\n      // #91\r\n      timeout = setTimeout(function () {\r\n        onTimeout();\r\n      }, 0);\r\n    }\r\n  };\r\n  XHRWrapper.prototype.abort = function () {\r\n    this._abort(false);\r\n  };\r\n  XHRWrapper.prototype.getResponseHeader = function (name) {\r\n    return this._contentType;\r\n  };\r\n  XHRWrapper.prototype.setRequestHeader = function (name, value) {\r\n    var xhr = this._xhr;\r\n    if (\"setRequestHeader\" in xhr) {\r\n      xhr.setRequestHeader(name, value);\r\n    }\r\n  };\r\n  XHRWrapper.prototype.send = function () {\r\n    // loading indicator in Safari < ? (6), Chrome < 14, Firefox\r\n    if (!(\"ontimeout\" in XMLHttpRequest.prototype) &&\r\n        document != undefined &&\r\n        document.readyState != undefined &&\r\n        document.readyState !== \"complete\") {\r\n      var that = this;\r\n      that._sendTimeout = setTimeout(function () {\r\n        that._sendTimeout = 0;\r\n        that.send();\r\n      }, 4);\r\n      return;\r\n    }\r\n\r\n    var xhr = this._xhr;\r\n    // withCredentials should be set after \"open\" for Safari and Chrome (< 19 ?)\r\n    xhr.withCredentials = this.withCredentials;\r\n    xhr.responseType = this.responseType;\r\n    try {\r\n      // xhr.send(); throws \"Not enough arguments\" in Firefox 3.0\r\n      xhr.send(undefined);\r\n    } catch (error1) {\r\n      // Safari 5.1.7, Opera 12\r\n      throw error1;\r\n    }\r\n  };\r\n\r\n  function XHRTransport(xhr) {\r\n    this._xhr = new XHRWrapper(xhr);\r\n  }\r\n\r\n  XHRTransport.prototype.open = function (onStartCallback, onProgressCallback, onFinishCallback, url, withCredentials, headers) {\r\n    var xhr = this._xhr;\r\n    xhr.open(\"GET\", url);\r\n    var offset = 0;\r\n    xhr.onprogress = function () {\r\n      var responseText = xhr.responseText;\r\n      var chunk = responseText.slice(offset);\r\n      offset += chunk.length;\r\n      onProgressCallback(chunk);\r\n    };\r\n    xhr.onreadystatechange = function () {\r\n      if (xhr.readyState === 2) {\r\n        var status = xhr.status;\r\n        var statusText = xhr.statusText;\r\n        var contentType = xhr.getResponseHeader(\"Content-Type\");\r\n        onStartCallback(status, statusText, contentType);\r\n      } else if (xhr.readyState === 4) {\r\n        onFinishCallback();\r\n      }\r\n    };\r\n    xhr.withCredentials = withCredentials;\r\n    xhr.responseType = \"text\";\r\n    for (var name in headers) {\r\n      if (Object.prototype.hasOwnProperty.call(headers, name)) {\r\n        xhr.setRequestHeader(name, headers[name]);\r\n      }\r\n    }\r\n    xhr.send();\r\n  };\r\n\r\n  XHRTransport.prototype.cancel = function () {\r\n    var xhr = this._xhr;\r\n    xhr.abort();\r\n  };\r\n\r\n  function EventTarget() {\r\n    this._listeners = Object.create(null);\r\n  }\r\n\r\n  function throwError(e) {\r\n    setTimeout(function () {\r\n      throw e;\r\n    }, 0);\r\n  }\r\n\r\n  EventTarget.prototype.dispatchEvent = function (event) {\r\n    event.target = this;\r\n    var typeListeners = this._listeners[event.type];\r\n    if (typeListeners != undefined) {\r\n      var length = typeListeners.length;\r\n      for (var i = 0; i < length; i += 1) {\r\n        var listener = typeListeners[i];\r\n        try {\r\n          if (typeof listener.handleEvent === \"function\") {\r\n            listener.handleEvent(event);\r\n          } else {\r\n            listener.call(this, event);\r\n          }\r\n        } catch (e) {\r\n          throwError(e);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  EventTarget.prototype.addEventListener = function (type, listener) {\r\n    type = String(type);\r\n    var listeners = this._listeners;\r\n    var typeListeners = listeners[type];\r\n    if (typeListeners == undefined) {\r\n      typeListeners = [];\r\n      listeners[type] = typeListeners;\r\n    }\r\n    var found = false;\r\n    for (var i = 0; i < typeListeners.length; i += 1) {\r\n      if (typeListeners[i] === listener) {\r\n        found = true;\r\n      }\r\n    }\r\n    if (!found) {\r\n      typeListeners.push(listener);\r\n    }\r\n  };\r\n  EventTarget.prototype.removeEventListener = function (type, listener) {\r\n    type = String(type);\r\n    var listeners = this._listeners;\r\n    var typeListeners = listeners[type];\r\n    if (typeListeners != undefined) {\r\n      var filtered = [];\r\n      for (var i = 0; i < typeListeners.length; i += 1) {\r\n        if (typeListeners[i] !== listener) {\r\n          filtered.push(typeListeners[i]);\r\n        }\r\n      }\r\n      if (filtered.length === 0) {\r\n        delete listeners[type];\r\n      } else {\r\n        listeners[type] = filtered;\r\n      }\r\n    }\r\n  };\r\n\r\n  function Event(type) {\r\n    this.type = type;\r\n    this.target = undefined;\r\n  }\r\n\r\n  function MessageEvent(type, options) {\r\n    Event.call(this, type);\r\n    this.data = options.data;\r\n    this.lastEventId = options.lastEventId;\r\n  }\r\n\r\n  MessageEvent.prototype = Object.create(Event.prototype);\r\n\r\n  var WAITING = -1;\r\n  var CONNECTING = 0;\r\n  var OPEN = 1;\r\n  var CLOSED = 2;\r\n\r\n  var AFTER_CR = -1;\r\n  var FIELD_START = 0;\r\n  var FIELD = 1;\r\n  var VALUE_START = 2;\r\n  var VALUE = 3;\r\n\r\n  var contentTypeRegExp = /^text\\/event\\-stream;?(\\s*charset\\=utf\\-8)?$/i;\r\n\r\n  var MINIMUM_DURATION = 1000;\r\n  var MAXIMUM_DURATION = 18000000;\r\n\r\n  var parseDuration = function (value, def) {\r\n    var n = parseInt(value, 10);\r\n    if (n !== n) {\r\n      n = def;\r\n    }\r\n    return clampDuration(n);\r\n  };\r\n  var clampDuration = function (n) {\r\n    return Math.min(Math.max(n, MINIMUM_DURATION), MAXIMUM_DURATION);\r\n  };\r\n\r\n  var fire = function (that, f, event) {\r\n    try {\r\n      if (typeof f === \"function\") {\r\n        f.call(that, event);\r\n      }\r\n    } catch (e) {\r\n      throwError(e);\r\n    }\r\n  };\r\n\r\n  function EventSourcePolyfill(url, options) {\r\n    EventTarget.call(this);\r\n\r\n    this.onopen = undefined;\r\n    this.onmessage = undefined;\r\n    this.onerror = undefined;\r\n\r\n    this.url = undefined;\r\n    this.readyState = undefined;\r\n    this.withCredentials = undefined;\r\n\r\n    this._close = undefined;\r\n\r\n    start(this, url, options);\r\n  }\r\n\r\n  function start(es, url, options) {\r\n    url = String(url);\r\n    var withCredentials = options != undefined && Boolean(options.withCredentials);\r\n\r\n    var initialRetry = clampDuration(1000);\r\n    var heartbeatTimeout = options != undefined && options.heartbeatTimeout != undefined ? parseDuration(options.heartbeatTimeout, 45000) : clampDuration(45000);\r\n\r\n    var lastEventId = \"\";\r\n    var retry = initialRetry;\r\n    var wasActivity = false;\r\n    var headers = options != undefined && options.headers != undefined ? JSON.parse(JSON.stringify(options.headers)) : undefined;\r\n    var CurrentTransport = options != undefined && options.Transport != undefined ? options.Transport : (XDomainRequest != undefined ? XDomainRequest : XMLHttpRequest);\r\n    var transport = new XHRTransport(new CurrentTransport());\r\n    var timeout = 0;\r\n    var currentState = WAITING;\r\n    var dataBuffer = \"\";\r\n    var lastEventIdBuffer = \"\";\r\n    var eventTypeBuffer = \"\";\r\n\r\n    var textBuffer = \"\";\r\n    var state = FIELD_START;\r\n    var fieldStart = 0;\r\n    var valueStart = 0;\r\n\r\n    var onStart = function (status, statusText, contentType) {\r\n      if (currentState === CONNECTING) {\r\n        if (status === 200 && contentType != undefined && contentTypeRegExp.test(contentType)) {\r\n          currentState = OPEN;\r\n          wasActivity = true;\r\n          retry = initialRetry;\r\n          es.readyState = OPEN;\r\n          var event = new Event(\"open\");\r\n          es.dispatchEvent(event);\r\n          fire(es, es.onopen, event);\r\n        } else {\r\n          var message = \"\";\r\n          if (status !== 200) {\r\n            if (statusText) {\r\n              statusText = statusText.replace(/\\s+/g, \" \");\r\n            }\r\n            message = \"EventSource's response has a status \" + status + \" \" + statusText + \" that is not 200. Aborting the connection.\";\r\n          } else {\r\n            message = \"EventSource's response has a Content-Type specifying an unsupported type: \" + (contentType == undefined ? \"-\" : contentType.replace(/\\s+/g, \" \")) + \". Aborting the connection.\";\r\n          }\r\n          throwError(new Error(message));\r\n          close();\r\n          var event = new Event(\"error\");\r\n          es.dispatchEvent(event);\r\n          fire(es, es.onerror, event);\r\n        }\r\n      }\r\n    };\r\n\r\n    var onProgress = function (textChunk) {\r\n      if (currentState === OPEN) {\r\n        var n = -1;\r\n        for (var i = 0; i < textChunk.length; i += 1) {\r\n          var c = textChunk.charCodeAt(i);\r\n          if (c === \"\\n\".charCodeAt(0) || c === \"\\r\".charCodeAt(0)) {\r\n            n = i;\r\n          }\r\n        }\r\n        var chunk = (n !== -1 ? textBuffer : \"\") + textChunk.slice(0, n + 1);\r\n        textBuffer = (n === -1 ? textBuffer : \"\") + textChunk.slice(n + 1);\r\n        if (chunk !== \"\") {\r\n          wasActivity = true;\r\n        }\r\n        for (var position = 0; position < chunk.length; position += 1) {\r\n          var c = chunk.charCodeAt(position);\r\n          if (state === AFTER_CR && c === \"\\n\".charCodeAt(0)) {\r\n            state = FIELD_START;\r\n          } else {\r\n            if (state === AFTER_CR) {\r\n              state = FIELD_START;\r\n            }\r\n            if (c === \"\\r\".charCodeAt(0) || c === \"\\n\".charCodeAt(0)) {\r\n              if (state !== FIELD_START) {\r\n                if (state === FIELD) {\r\n                  valueStart = position + 1;\r\n                }\r\n                var field = chunk.slice(fieldStart, valueStart - 1);\r\n                var value = chunk.slice(valueStart + (valueStart < position && chunk.charCodeAt(valueStart) === \" \".charCodeAt(0) ? 1 : 0), position);\r\n                if (field === \"data\") {\r\n                  dataBuffer += \"\\n\";\r\n                  dataBuffer += value;\r\n                } else if (field === \"id\") {\r\n                  lastEventIdBuffer = value;\r\n                } else if (field === \"event\") {\r\n                  eventTypeBuffer = value;\r\n                } else if (field === \"retry\") {\r\n                  initialRetry = parseDuration(value, initialRetry);\r\n                  retry = initialRetry;\r\n                } else if (field === \"heartbeatTimeout\") {\r\n                  heartbeatTimeout = parseDuration(value, heartbeatTimeout);\r\n                  if (timeout !== 0) {\r\n                    clearTimeout(timeout);\r\n                    timeout = setTimeout(function () {\r\n                      onTimeout();\r\n                    }, heartbeatTimeout);\r\n                  }\r\n                }\r\n              }\r\n              if (state === FIELD_START) {\r\n                if (dataBuffer !== \"\") {\r\n                  lastEventId = lastEventIdBuffer;\r\n                  if (eventTypeBuffer === \"\") {\r\n                    eventTypeBuffer = \"message\";\r\n                  }\r\n                  var event = new MessageEvent(eventTypeBuffer, {\r\n                    data: dataBuffer.slice(1),\r\n                    lastEventId: lastEventIdBuffer\r\n                  });\r\n                  es.dispatchEvent(event);\r\n                  if (eventTypeBuffer === \"message\") {\r\n                    fire(es, es.onmessage, event);\r\n                  }\r\n                  if (currentState === CLOSED) {\r\n                    return;\r\n                  }\r\n                }\r\n                dataBuffer = \"\";\r\n                eventTypeBuffer = \"\";\r\n              }\r\n              state = c === \"\\r\".charCodeAt(0) ? AFTER_CR : FIELD_START;\r\n            } else {\r\n              if (state === FIELD_START) {\r\n                fieldStart = position;\r\n                state = FIELD;\r\n              }\r\n              if (state === FIELD) {\r\n                if (c === \":\".charCodeAt(0)) {\r\n                  valueStart = position + 1;\r\n                  state = VALUE_START;\r\n                }\r\n              } else if (state === VALUE_START) {\r\n                state = VALUE;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    var onFinish = function () {\r\n      if (currentState === OPEN || currentState === CONNECTING) {\r\n        currentState = WAITING;\r\n        if (timeout !== 0) {\r\n          clearTimeout(timeout);\r\n          timeout = 0;\r\n        }\r\n        timeout = setTimeout(function () {\r\n          onTimeout();\r\n        }, retry);\r\n        retry = clampDuration(Math.min(initialRetry * 16, retry * 2));\r\n\r\n        es.readyState = CONNECTING;\r\n        var event = new Event(\"error\");\r\n        es.dispatchEvent(event);\r\n        fire(es, es.onerror, event);\r\n      }\r\n    };\r\n\r\n    var close = function () {\r\n      currentState = CLOSED;\r\n      transport.cancel();\r\n      if (timeout !== 0) {\r\n        clearTimeout(timeout);\r\n        timeout = 0;\r\n      }\r\n      es.readyState = CLOSED;\r\n    };\r\n\r\n    var onTimeout = function () {\r\n      timeout = 0;\r\n\r\n      if (currentState !== WAITING) {\r\n        if (!wasActivity) {\r\n          throwError(new Error(\"No activity within \" + heartbeatTimeout + \" milliseconds. Reconnecting.\"));\r\n          transport.cancel();\r\n        } else {\r\n          wasActivity = false;\r\n          timeout = setTimeout(function () {\r\n            onTimeout();\r\n          }, heartbeatTimeout);\r\n        }\r\n        return;\r\n      }\r\n\r\n      wasActivity = false;\r\n      timeout = setTimeout(function () {\r\n        onTimeout();\r\n      }, heartbeatTimeout);\r\n\r\n      currentState = CONNECTING;\r\n      dataBuffer = \"\";\r\n      eventTypeBuffer = \"\";\r\n      lastEventIdBuffer = lastEventId;\r\n      textBuffer = \"\";\r\n      fieldStart = 0;\r\n      valueStart = 0;\r\n      state = FIELD_START;\r\n\r\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=428916\r\n      // Request header field Last-Event-ID is not allowed by Access-Control-Allow-Headers.\r\n      var requestURL = url;\r\n      if (url.slice(0, 5) !== \"data:\" &&\r\n          url.slice(0, 5) !== \"blob:\") {\r\n        requestURL = url + (url.indexOf(\"?\", 0) === -1 ? \"?\" : \"&\") + \"lastEventId=\" + encodeURIComponent(lastEventId);\r\n      }\r\n      var requestHeaders = {};\r\n      requestHeaders[\"Accept\"] = \"text/event-stream\";\r\n      if (headers != undefined) {\r\n        for (var name in headers) {\r\n          if (Object.prototype.hasOwnProperty.call(headers, name)) {\r\n            requestHeaders[name] = headers[name];\r\n          }\r\n        }\r\n      }\r\n      try {\r\n        transport.open(onStart, onProgress, onFinish, requestURL, withCredentials, requestHeaders);\r\n      } catch (error) {\r\n        close();\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    es.url = url;\r\n    es.readyState = CONNECTING;\r\n    es.withCredentials = withCredentials;\r\n    es._close = close;\r\n\r\n    onTimeout();\r\n  }\r\n\r\n  EventSourcePolyfill.prototype = Object.create(EventTarget.prototype);\r\n  EventSourcePolyfill.prototype.CONNECTING = CONNECTING;\r\n  EventSourcePolyfill.prototype.OPEN = OPEN;\r\n  EventSourcePolyfill.prototype.CLOSED = CLOSED;\r\n  EventSourcePolyfill.prototype.close = function () {\r\n    this._close();\r\n  };\r\n\r\n  EventSourcePolyfill.CONNECTING = CONNECTING;\r\n  EventSourcePolyfill.OPEN = OPEN;\r\n  EventSourcePolyfill.CLOSED = CLOSED;\r\n  EventSourcePolyfill.prototype.withCredentials = undefined;\r\n\r\n  global.EventSourcePolyfill = EventSourcePolyfill;\r\n  global.NativeEventSource = NativeEventSource;\r\n\r\n  if (XMLHttpRequest != undefined && (NativeEventSource == undefined || !(\"withCredentials\" in NativeEventSource.prototype))) {\r\n    // Why replace a native EventSource ?\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=444328\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=831392\r\n    // https://code.google.com/p/chromium/issues/detail?id=260144\r\n    // https://code.google.com/p/chromium/issues/detail?id=225654\r\n    // ...\r\n    global.EventSource = EventSourcePolyfill;\r\n  }\r\n\r\n}(typeof window !== 'undefined' ? window : this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/event-source-polyfill/src/eventsource.js\n// module id = ./node_modules/event-source-polyfill/src/eventsource.js\n// module chunks = 0"],"sourceRoot":""}